{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server of Zooz api server",
    "version": "0.0.1",
    "title": "Swagger Zooz"
  },
  "tags": [
    {
      "name": "user",
      "description": "Everything about the user"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find user by ID",
        "description": "Returns a single user",
        "operationId": "getUserById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes a user",
        "description": "Deletes a single user by given ID",
        "operationId": "deleteUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {"description": "User deleted successfully"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get list of users",
        "description": "get list of users by different parameters",
        "operationId": "",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "get list of users with the same name",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "query",
            "name": "age",
            "description": "get list of users with the same age",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "get list of users with the same country",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Users not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "DOB": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}